require 'pathname'

module Blitz3D
  module Tools
    module Config
      TOOLCHAINS_DIR = File.join(File.dirname(Blitz3D.path), '..', '_release', 'toolchains')

      def file_has_changed?(file, string)
        File.open(file).read != string
      rescue Errno::ENOENT
        true
      end

      def runtimes
        Runtime.all.each do |runtime|
          puts "Generating runtime #{runtime.name.bold}..."

          f = StringIO.new
          f.write "# AUTOGENERATED. DO NOT EDIT.\n"
          f.write "# RUN `bin/blitz3d config` TO UPDATE.\n"
          f.write "\n"
          f.write "if(#{runtime.platforms.map { |p| "NOT BB_#{p.upcase}" }.join(" AND ")})\n"
          f.write "  return()\n"
          f.write "endif()\n"
          f.write "\n"
          f.write "bb_start_runtime(#{runtime.id} #{runtime.entry['runtime']})\n"
          f.write "\n"
          runtime.dependencies(:list).each do |dep|
            f.write("bb_addmodule(#{dep.id})\n")
          end
          f.write "\n"
          f.write "bb_end_runtime()\n"

          out_file = "src/runtime/#{runtime.id}/CMakeLists.txt"
          if file_has_changed?(out_file, f.string)
            File.open(out_file, 'w') { |t| t.write f.string }
          end
        end
      end

      def run
        runtimes
      end
    end
  end
end
