#ifndef BB_ODE_COMMANDS_H
#define BB_ODE_COMMANDS_H

#include <bb/blitz/module.h>
#include <bb/ode/ode.h>

#ifdef __cplusplus
extern "C" {
#endif

// AUTOGENERATED. DO NOT EDIT.
// RUN `make` TO UPDATE.

//Initialization
void BBCALL _odeInitODE(  );
void BBCALL _odeCloseODE(  );

//World
bb_int_t BBCALL _odeWorldCreate(  );
void BBCALL _odeWorldDestroy( bb_int_t world );
void BBCALL _odeWorldSetGravity( bb_int_t world,bb_float_t x,bb_float_t y,bb_float_t z );
bb_int_t BBCALL _odeWorldQuickStep( bb_int_t world,bb_float_t stepsize );
void BBCALL _odeWorldSetAutoDisableFlag( bb_int_t world,bb_int_t do_auto_disable );

//Space
bb_int_t BBCALL _odeHashSpaceCreate( bb_int_t space );
void BBCALL _odeSpaceDestroy( bb_int_t space );

//Body
void BBCALL _odeBodySetAutoDisableFlag( bb_int_t body,bb_int_t do_auto_disable );
bb_int_t BBCALL _odeBodyCreate( bb_int_t world );
void BBCALL _odeBodySetPosition( bb_int_t body,bb_float_t x,bb_float_t y,bb_float_t z );
void BBCALL _odeBodySetRotation( bb_int_t body,bb_float_t pitch,bb_float_t yaw,bb_float_t roll );

//Geom
void BBCALL _odeGeomSetBody( bb_int_t geom,bb_int_t body );
bb_float_t BBCALL _odeGeomGetPositionX( bb_int_t geom );
bb_float_t BBCALL _odeGeomGetPositionY( bb_int_t geom );
bb_float_t BBCALL _odeGeomGetPositionZ( bb_int_t geom );
bb_float_t BBCALL _odeGeomGetPitch( bb_int_t geom );
bb_float_t BBCALL _odeGeomGetYaw( bb_int_t geom );
bb_float_t BBCALL _odeGeomGetRoll( bb_int_t geom );
bb_int_t BBCALL _odeCreateBox( bb_int_t space,bb_float_t lx,bb_float_t ly,bb_float_t lz );
bb_int_t BBCALL _odeCreatePlane( bb_int_t space,bb_float_t a,bb_float_t b,bb_float_t c,bb_float_t d );

//Joints
bb_int_t BBCALL _odeJointGroupCreate( bb_int_t max_size );
void BBCALL _odeJointGroupDestroy( bb_int_t group );
void BBCALL _odeJointGroupEmpty( bb_int_t group );

//Collision
void BBCALL _odeSpaceCollide( bb_int_t space,bb_int_t world,bb_int_t group );

//Contact
void BBCALL _odeContactSetMaxContacts( bb_int_t max );
bb_int_t BBCALL _odeContactGetMaxContacts(  );
void BBCALL _odeContactSetMode( bb_int_t mode );
bb_int_t BBCALL _odeContactGetMode(  );
void BBCALL _odeContactSetMu( bb_float_t mu );
bb_float_t BBCALL _odeContactGetMu(  );
void BBCALL _odeContactSetMu2( bb_float_t mu );
bb_float_t BBCALL _odeContactGetMu2(  );
void BBCALL _odeContactSetFDir1( bb_float_t fdir1x,bb_float_t fdir1y,bb_float_t fdir1z );
void BBCALL _odeContactGetFDir1(  );
void BBCALL _odeContactSetBounce( bb_float_t bounce );
bb_float_t BBCALL _odeContactGetBounce(  );
void BBCALL _odeContactSetBounceVel( bb_float_t vel );
bb_float_t BBCALL _odeContactGetBounceVel(  );
void BBCALL _odeContactSetSoftERP( bb_float_t erp );
bb_float_t BBCALL _odeContactGetSoftERP(  );
void BBCALL _odeContactSetSoftCFM( bb_float_t cfm );
bb_float_t BBCALL _odeContactGetSoftCFM(  );
void BBCALL _odeContactSetMotion1( bb_float_t motion );
bb_float_t BBCALL _odeContactGetMotion1(  );
void BBCALL _odeContactSetMotion2( bb_float_t motion );
bb_float_t BBCALL _odeContactGetMotion2(  );
void BBCALL _odeContactSetSlip1( bb_float_t slip );
bb_float_t BBCALL _odeContactGetSlip1(  );
void BBCALL _odeContactSetSlip2( bb_float_t slip );
bb_float_t BBCALL _odeContactGetSlip2(  );

//Blitz3D Helpers
void BBCALL _odeGeomSyncEntity( bb_int_t geom,bb_int_t entity );

//JV-ODE Compatibility
void BBCALL _odeRegisterODE( bb_int_t key1,bb_int_t key2,bb_int_t key3,bb_int_t key4 );
bb_float_t BBCALL _odeGetVersion(  );
bb_int_t BBCALL _odeDemoTime(  );

#ifdef __cplusplus
}
#endif


#endif
