
#include "ode.h"
#include <ode/ode.h>

// ODE_API dJointID dJointCreateBall (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateHinge (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateSlider (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateContact (dWorldID, dJointGroupID, const dContact *);
// ODE_API dJointID dJointCreateHinge2 (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateUniversal (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreatePR (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreatePU (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreatePiston (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateFixed (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateNull (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateAMotor (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateLMotor (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreatePlane2D (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateDBall (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateDHinge (dWorldID, dJointGroupID);
// ODE_API dJointID dJointCreateTransmission (dWorldID, dJointGroupID);
// ODE_API void dJointDestroy (dJointID);

BBLIB bb_ptr_t BBCALL _odeJointGroupCreate( bb_int_t max_size ){
  return (bb_ptr_t)dJointGroupCreate( max_size );
}

BBLIB void BBCALL _odeJointGroupDestroy( bb_ptr_t g ){
  dJointGroupDestroy( (dJointGroupID)g );
}

BBLIB void BBCALL _odeJointGroupEmpty( bb_ptr_t g ){
  dJointGroupEmpty( (dJointGroupID)g );
}

// ODE_API int dJointGetNumBodies(dJointID);
// ODE_API void dJointAttach (dJointID, dBodyID body1, dBodyID body2);
// ODE_API void dJointEnable (dJointID);
// ODE_API void dJointDisable (dJointID);
// ODE_API int dJointIsEnabled (dJointID);
// ODE_API void dJointSetData (dJointID, void *data);
// ODE_API void *dJointGetData (dJointID);
// ODE_API dJointType dJointGetType (dJointID);
// ODE_API dBodyID dJointGetBody (dJointID, int index);
// ODE_API void dJointSetFeedback (dJointID, dJointFeedback *);
// ODE_API dJointFeedback *dJointGetFeedback (dJointID);
// ODE_API void dJointSetBallAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetBallAnchor2 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetBallParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetHingeAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetHingeAnchorDelta (dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az);
// ODE_API void dJointSetHingeAxis (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetHingeAxisOffset (dJointID j, dReal x, dReal y, dReal z, dReal angle);
// ODE_API void dJointSetHingeParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddHingeTorque(dJointID joint, dReal torque);
// ODE_API void dJointSetSliderAxis (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetSliderAxisDelta (dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az);
// ODE_API void dJointSetSliderParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddSliderForce(dJointID joint, dReal force);
// ODE_API void dJointSetHinge2Anchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetHinge2Axis1 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetHinge2Axis2 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetHinge2Param (dJointID, int parameter, dReal value);
// ODE_API void dJointAddHinge2Torques(dJointID joint, dReal torque1, dReal torque2);
// ODE_API void dJointSetUniversalAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetUniversalAxis1 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetUniversalAxis1Offset (dJointID, dReal x, dReal y, dReal z, dReal offset1, dReal offset2);
// ODE_API void dJointSetUniversalAxis2 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetUniversalAxis2Offset (dJointID, dReal x, dReal y, dReal z, dReal offset1, dReal offset2);
// ODE_API void dJointSetUniversalParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddUniversalTorques(dJointID joint, dReal torque1, dReal torque2);
// ODE_API void dJointSetPRAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPRAxis1 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPRAxis2 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPRParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddPRTorque (dJointID j, dReal torque);
// ODE_API void dJointSetPUAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API_DEPRECATED ODE_API void dJointSetPUAnchorDelta (dJointID, dReal x, dReal y, dReal z, dReal dx, dReal dy, dReal dz);
// ODE_API void dJointSetPUAnchorOffset (dJointID, dReal x, dReal y, dReal z, dReal dx, dReal dy, dReal dz);
// ODE_API void dJointSetPUAxis1 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPUAxis2 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPUAxis3 (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPUAxisP (dJointID id, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPUParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddPUTorque (dJointID j, dReal torque);
// ODE_API void dJointSetPistonAnchor (dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetPistonAnchorOffset(dJointID j, dReal x, dReal y, dReal z, dReal dx, dReal dy, dReal dz);
// ODE_API void dJointSetPistonAxis (dJointID, dReal x, dReal y, dReal z);
// ODE_API_DEPRECATED ODE_API void dJointSetPistonAxisDelta (dJointID j, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az);
// ODE_API void dJointSetPistonParam (dJointID, int parameter, dReal value);
// ODE_API void dJointAddPistonForce (dJointID joint, dReal force);
// ODE_API void dJointSetFixed (dJointID);
// ODE_API void dJointSetFixedParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetAMotorNumAxes (dJointID, int num);
// ODE_API void dJointSetAMotorAxis (dJointID, int anum, int rel, dReal x, dReal y, dReal z);
// ODE_API void dJointSetAMotorAngle (dJointID, int anum, dReal angle);
// ODE_API void dJointSetAMotorParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetAMotorMode (dJointID, int mode);
// ODE_API void dJointAddAMotorTorques (dJointID, dReal torque1, dReal torque2, dReal torque3);
// ODE_API void dJointSetLMotorNumAxes (dJointID, int num);
// ODE_API void dJointSetLMotorAxis (dJointID, int anum, int rel, dReal x, dReal y, dReal z);
// ODE_API void dJointSetLMotorParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetPlane2DXParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetPlane2DYParam (dJointID, int parameter, dReal value);
// ODE_API void dJointSetPlane2DAngleParam (dJointID, int parameter, dReal value);
// ODE_API void dJointGetBallAnchor (dJointID, dVector3 result);
// ODE_API void dJointGetBallAnchor2 (dJointID, dVector3 result);
// ODE_API dReal dJointGetBallParam (dJointID, int parameter);
// ODE_API void dJointGetHingeAnchor (dJointID, dVector3 result);
// ODE_API void dJointGetHingeAnchor2 (dJointID, dVector3 result);
// ODE_API void dJointGetHingeAxis (dJointID, dVector3 result);
// ODE_API dReal dJointGetHingeParam (dJointID, int parameter);
// ODE_API dReal dJointGetHingeAngle (dJointID);
// ODE_API dReal dJointGetHingeAngleRate (dJointID);
// ODE_API dReal dJointGetSliderPosition (dJointID);
// ODE_API dReal dJointGetSliderPositionRate (dJointID);
// ODE_API void dJointGetSliderAxis (dJointID, dVector3 result);
// ODE_API dReal dJointGetSliderParam (dJointID, int parameter);
// ODE_API void dJointGetHinge2Anchor (dJointID, dVector3 result);
// ODE_API void dJointGetHinge2Anchor2 (dJointID, dVector3 result);
// ODE_API void dJointGetHinge2Axis1 (dJointID, dVector3 result);
// ODE_API void dJointGetHinge2Axis2 (dJointID, dVector3 result);
// ODE_API dReal dJointGetHinge2Param (dJointID, int parameter);
// ODE_API dReal dJointGetHinge2Angle1 (dJointID);
// ODE_API dReal dJointGetHinge2Angle2 (dJointID);
// ODE_API dReal dJointGetHinge2Angle1Rate (dJointID);
// ODE_API dReal dJointGetHinge2Angle2Rate (dJointID);
// ODE_API void dJointGetUniversalAnchor (dJointID, dVector3 result);
// ODE_API void dJointGetUniversalAnchor2 (dJointID, dVector3 result);
// ODE_API void dJointGetUniversalAxis1 (dJointID, dVector3 result);
// ODE_API void dJointGetUniversalAxis2 (dJointID, dVector3 result);
// ODE_API dReal dJointGetUniversalParam (dJointID, int parameter);
// ODE_API void dJointGetUniversalAngles (dJointID, dReal *angle1, dReal *angle2);
// ODE_API dReal dJointGetUniversalAngle1 (dJointID);
// ODE_API dReal dJointGetUniversalAngle2 (dJointID);
// ODE_API dReal dJointGetUniversalAngle1Rate (dJointID);
// ODE_API dReal dJointGetUniversalAngle2Rate (dJointID);
// ODE_API void dJointGetPRAnchor (dJointID, dVector3 result);
// ODE_API dReal dJointGetPRPosition (dJointID);
// ODE_API dReal dJointGetPRPositionRate (dJointID);
// ODE_API dReal dJointGetPRAngle (dJointID);
// ODE_API dReal dJointGetPRAngleRate (dJointID);
// ODE_API void dJointGetPRAxis1 (dJointID, dVector3 result);
// ODE_API void dJointGetPRAxis2 (dJointID, dVector3 result);
// ODE_API dReal dJointGetPRParam (dJointID, int parameter);
// ODE_API void dJointGetPUAnchor (dJointID, dVector3 result);
// ODE_API dReal dJointGetPUPosition (dJointID);
// ODE_API dReal dJointGetPUPositionRate (dJointID);
// ODE_API void dJointGetPUAxis1 (dJointID, dVector3 result);
// ODE_API void dJointGetPUAxis2 (dJointID, dVector3 result);
// ODE_API void dJointGetPUAxis3 (dJointID, dVector3 result);
// ODE_API void dJointGetPUAxisP (dJointID id, dVector3 result);
// ODE_API void dJointGetPUAngles (dJointID, dReal *angle1, dReal *angle2);
// ODE_API dReal dJointGetPUAngle1 (dJointID);
// ODE_API dReal dJointGetPUAngle1Rate (dJointID);
// ODE_API dReal dJointGetPUAngle2 (dJointID);
// ODE_API dReal dJointGetPUAngle2Rate (dJointID);
// ODE_API dReal dJointGetPUParam (dJointID, int parameter);
// ODE_API dReal dJointGetPistonPosition (dJointID);
// ODE_API dReal dJointGetPistonPositionRate (dJointID);
// ODE_API dReal dJointGetPistonAngle (dJointID);
// ODE_API dReal dJointGetPistonAngleRate (dJointID);
// ODE_API void dJointGetPistonAnchor (dJointID, dVector3 result);
// ODE_API void dJointGetPistonAnchor2 (dJointID, dVector3 result);
// ODE_API void dJointGetPistonAxis (dJointID, dVector3 result);
// ODE_API dReal dJointGetPistonParam (dJointID, int parameter);
// ODE_API int dJointGetAMotorNumAxes (dJointID);
// ODE_API void dJointGetAMotorAxis (dJointID, int anum, dVector3 result);
// ODE_API int dJointGetAMotorAxisRel (dJointID, int anum);
// ODE_API dReal dJointGetAMotorAngle (dJointID, int anum);
// ODE_API dReal dJointGetAMotorAngleRate (dJointID, int anum);
// ODE_API dReal dJointGetAMotorParam (dJointID, int parameter);
// ODE_API int dJointGetAMotorMode (dJointID);
// ODE_API int dJointGetLMotorNumAxes (dJointID);
// ODE_API void dJointGetLMotorAxis (dJointID, int anum, dVector3 result);
// ODE_API dReal dJointGetLMotorParam (dJointID, int parameter);
// ODE_API dReal dJointGetFixedParam (dJointID, int parameter);
// ODE_API void dJointGetTransmissionContactPoint1(dJointID, dVector3 result);
// ODE_API void dJointGetTransmissionContactPoint2(dJointID, dVector3 result);
// ODE_API void dJointSetTransmissionAxis1(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetTransmissionAxis1(dJointID, dVector3 result);
// ODE_API void dJointSetTransmissionAxis2(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetTransmissionAxis2(dJointID, dVector3 result);
// ODE_API void dJointSetTransmissionAnchor1(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetTransmissionAnchor1(dJointID, dVector3 result);
// ODE_API void dJointSetTransmissionAnchor2(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetTransmissionAnchor2(dJointID, dVector3 result);
// ODE_API void dJointSetTransmissionParam(dJointID, int parameter, dReal value);
// ODE_API dReal dJointGetTransmissionParam(dJointID, int parameter);
// ODE_API void dJointSetTransmissionMode( dJointID j, int mode );
// ODE_API int dJointGetTransmissionMode( dJointID j );
// ODE_API void dJointSetTransmissionRatio( dJointID j, dReal ratio );
// ODE_API dReal dJointGetTransmissionRatio( dJointID j );
// ODE_API void dJointSetTransmissionAxis( dJointID j, dReal x, dReal y, dReal z );
// ODE_API void dJointGetTransmissionAxis( dJointID j, dVector3 result );
// ODE_API dReal dJointGetTransmissionAngle1( dJointID j );
// ODE_API dReal dJointGetTransmissionAngle2( dJointID j );
// ODE_API dReal dJointGetTransmissionRadius1( dJointID j );
// ODE_API dReal dJointGetTransmissionRadius2( dJointID j );
// ODE_API void dJointSetTransmissionRadius1( dJointID j, dReal radius );
// ODE_API void dJointSetTransmissionRadius2( dJointID j, dReal radius );
// ODE_API dReal dJointGetTransmissionBacklash( dJointID j );
// ODE_API void dJointSetTransmissionBacklash( dJointID j, dReal backlash );
// ODE_API void dJointSetDBallAnchor1(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetDBallAnchor2(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetDBallAnchor1(dJointID, dVector3 result);
// ODE_API void dJointGetDBallAnchor2(dJointID, dVector3 result);
// ODE_API dReal dJointGetDBallDistance(dJointID);
// ODE_API void dJointSetDBallDistance(dJointID, dReal dist);
// ODE_API void dJointSetDBallParam(dJointID, int parameter, dReal value);
// ODE_API dReal dJointGetDBallParam(dJointID, int parameter);
// ODE_API void dJointSetDHingeAxis(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetDHingeAxis(dJointID, dVector3 result);
// ODE_API void dJointSetDHingeAnchor1(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointSetDHingeAnchor2(dJointID, dReal x, dReal y, dReal z);
// ODE_API void dJointGetDHingeAnchor1(dJointID, dVector3 result);
// ODE_API void dJointGetDHingeAnchor2(dJointID, dVector3 result);
// ODE_API dReal dJointGetDHingeDistance(dJointID);
// ODE_API void dJointSetDHingeParam(dJointID, int parameter, dReal value);
// ODE_API dReal dJointGetDHingeParam(dJointID, int parameter);
// ODE_API dJointID dConnectingJoint (dBodyID, dBodyID);
// ODE_API int dConnectingJointList (dBodyID, dBodyID, dJointID*);
