// AUTOGENERATED. DO NOT EDIT.
// RUN `bin/blitz3d config` TO UPDATE.

#include <bb/stub/stub.h>


#include "../../stdutil/stdutil.h"


// TODO: get rid of the dirty bbStart hack that's needed to keep clang from stripping...

BBMODULE_DECL( blitz );
BBMODULE_DECL( hook );
BBMODULE_DECL( event );
BBMODULE_DECL( math );
BBMODULE_DECL( string );
BBMODULE_DECL( stdio );
BBMODULE_DECL( runtime );
BBMODULE_DECL( system );
BBMODULE_DECL( system_ios );
BBMODULE_DECL( timer_noop );
BBMODULE_DECL( stream );
BBMODULE_DECL( bank );
BBMODULE_DECL( audio );
BBMODULE_DECL( pixmap );
BBMODULE_DECL( blitz2d );
BBMODULE_DECL( blitz3d );
BBMODULE_DECL( blitz3d_gles2 );
BBMODULE_DECL( input );
BBMODULE_DECL( graphics );
BBMODULE_DECL( runtime_glfm );

class BBRuntime;
BBRuntime *bbCreateOpenGLRuntime();
BBRuntime *bbCreateRuntime(){
	return bbCreateOpenGLRuntime();
}

#ifdef WIN32
void bbruntime_link( void (*link)( const char *sym,void *pc ) ){
	blitz_link( link );
	math_link( link );
	string_link( link );
	stdio_link( link );
	runtime_link( link );
	system_link( link );
	stream_link( link );
	bank_link( link );
	audio_link( link );
	blitz2d_link( link );
	blitz3d_link( link );
	input_link( link );
	graphics_link( link );
}
#endif
bool bbruntime_create(){
	if( blitz_create() ){
				if( hook_create() ){
						if( event_create() ){
								if( math_create() ){
										if( string_create() ){
												if( stdio_create() ){
														if( runtime_create() ){
																if( system_create() ){
																		if( system_ios_create() ){
																				if( timer_noop_create() ){
																						if( stream_create() ){
																								if( bank_create() ){
																										if( audio_create() ){
																												if( pixmap_create() ){
																														if( blitz2d_create() ){
																																if( blitz3d_create() ){
																																		if( blitz3d_gles2_create() ){
																																				if( input_create() ){
																																						if( graphics_create() ){
																																								if( runtime_glfm_create() ){
																																										return true;
																				}else sue( "runtime_glfm_create failed" );bbStart( 0,0,0 );
																				graphics_destroy();
																			}else sue( "graphics_create failed" );bbStart( 0,0,0 );
																			input_destroy();
																		}else sue( "input_create failed" );bbStart( 0,0,0 );
																		blitz3d_gles2_destroy();
																	}else sue( "blitz3d_gles2_create failed" );bbStart( 0,0,0 );
																	blitz3d_destroy();
																}else sue( "blitz3d_create failed" );bbStart( 0,0,0 );
																blitz2d_destroy();
															}else sue( "blitz2d_create failed" );bbStart( 0,0,0 );
															pixmap_destroy();
														}else sue( "pixmap_create failed" );bbStart( 0,0,0 );
														audio_destroy();
													}else sue( "audio_create failed" );bbStart( 0,0,0 );
													bank_destroy();
												}else sue( "bank_create failed" );bbStart( 0,0,0 );
												stream_destroy();
											}else sue( "stream_create failed" );bbStart( 0,0,0 );
											timer_noop_destroy();
										}else sue( "timer_noop_create failed" );bbStart( 0,0,0 );
										system_ios_destroy();
									}else sue( "system_ios_create failed" );bbStart( 0,0,0 );
									system_destroy();
								}else sue( "system_create failed" );bbStart( 0,0,0 );
								runtime_destroy();
							}else sue( "runtime_create failed" );bbStart( 0,0,0 );
							stdio_destroy();
						}else sue( "stdio_create failed" );bbStart( 0,0,0 );
						string_destroy();
					}else sue( "string_create failed" );bbStart( 0,0,0 );
					math_destroy();
				}else sue( "math_create failed" );bbStart( 0,0,0 );
				event_destroy();
			}else sue( "event_create failed" );bbStart( 0,0,0 );
			hook_destroy();
		}else sue( "hook_create failed" );bbStart( 0,0,0 );
		blitz_destroy();
	}else sue( "blitz_create failed" );bbStart( 0,0,0 );
	return false;
}

bool bbruntime_destroy(){
	runtime_glfm_destroy();
	graphics_destroy();
	input_destroy();
	blitz3d_gles2_destroy();
	blitz3d_destroy();
	blitz2d_destroy();
	pixmap_destroy();
	audio_destroy();
	bank_destroy();
	stream_destroy();
	timer_noop_destroy();
	system_ios_destroy();
	system_destroy();
	runtime_destroy();
	stdio_destroy();
	string_destroy();
	math_destroy();
	event_destroy();
	hook_destroy();
	blitz_destroy();
	return true;
}
